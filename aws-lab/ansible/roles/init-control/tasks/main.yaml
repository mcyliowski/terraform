---
- name: Initialize Kubernetes control plane
  hosts: control
  become: true
  tasks:

- name: Ensure /opt/cni/bin exists
  file:
    path: /opt/cni/bin
    state: directory
    mode: '0755'

- name: Download CNI plugins
  get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v1.3.0/cni-plugins-linux-amd64-v1.3.0.tgz
    dest: /tmp/cni-plugins.tgz

- name: Extract CNI plugins
  unarchive:
    src: /tmp/cni-plugins.tgz
    dest: /opt/cni/bin
    remote_src: yes

- name: Ensure CNI symlink for kubelet
  file:
    src: /opt/cni/bin
    dest: /usr/lib/cni
    state: link

- name: Initialize Kubernetes control plane
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint=control-node
  register: kubeadm_init
  args:
    creates: /etc/kubernetes/admin.conf

- name: Create .kube directory for admin
  file:
    path: /home/admin/.kube
    state: directory
    owner: admin
    group: admin
    mode: '0755'

- name: Copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/admin/.kube/config
    remote_src: yes
    owner: admin
    group: admin
    mode: '0644'

- name: Wait for Kubernetes API to be ready
  become_user: admin
  command: kubectl get nodes
  register: kube_api
  retries: 15
  delay: 10
  until: kube_api.rc == 0

- name: Install Calico CNI
  become_user: admin
  command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.28.0/manifests/calico.yaml

- name: Wait for all control plane pods to be Running
  become_user: admin
  shell: |
    kubectl get pods -n kube-system --no-headers | awk '{print $3}' | grep -v Running
  register: pods_not_running
  retries: 20
  delay: 15
  until: pods_not_running.stdout == ""

- name: Save kubeadm join command for workers
  shell: kubeadm token create --print-join-command
  register: join_command_result

- name: Set join_command fact
  set_fact:
    join_command: "{{ join_command_result.stdout }}"

- name: Wait for all nodes (control + workers) to become Ready
  become_user: admin
  shell: |
    kubectl get nodes --no-headers | awk '{print $2}' | grep -v Ready
  register: not_ready
  retries: 20
  delay: 15
  until: not_ready.stdout == ""
